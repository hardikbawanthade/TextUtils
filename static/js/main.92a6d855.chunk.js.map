{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","onClick","toggleMode","htmlFor","Alert","style","heigth","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","data-bs-dismiss","TextForm","text","setText","useState","Fragment","color","heading","value","onChange","event","target","backgroundColor","rows","handleUpClick","newText","showAlert","handleLowClick","handleOnClear","handleCopy","document","querySelector","select","navigator","clipboard","writeText","handleSpace","split","join","filter","ele","length","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.92a6d855.chunk.js","sourcesContent":["import React from 'react'\r\n// import PropTypes from \"prop-types\";\r\n// import {Link} from \"react-route-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li>\r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n\r\n      <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark Mode</label>\r\n     </div>\r\n\r\n     \r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n      <div style={{heigth : '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg} \r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>}\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Coverted to UpperCase\",\"success\");\r\n  }\r\n\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Coverted to LowerCase\",\"success\");\r\n  }\r\n\r\n  const handleOnClear = () => {\r\n    let newText = '';\r\n    setText(newText);\r\n  }\r\n\r\n  const handleCopy = () => {\r\n    let text = document.querySelector(\"#MyBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  }\r\n  \r\n  const handleSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode === 'dark'?'white':'#0b2750'}}>\r\n        <h1>{props.heading}</h1>\r\n\r\n    <div className=\"mb-3\">\r\n      <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode ==='dark'?'#0a58ca':'light',color: props.mode === 'dark'?'white':'black'}} id=\"MyBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick} >Convert to upperCase</button>\r\n    <button className='btn btn-primary mx-1 my-1' onClick={handleLowClick}  >Convert to lowerCase</button>\r\n    <button className=\"btn btn-primary mx-1 my-1\" onClick={handleOnClear}>Clear Text</button>\r\n    <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n    <button className=\"btn btn-primary mx-1 mx-1\" onClick={handleSpace}>Remove Spaces</button>\r\n    </div>\r\n\r\n    <div className=\"container my-2\" style={{color: props.mode === 'dark'?'white':'#0b2750'}}>\r\n    <h2 className='my-2'>Your Text Summary</h2>\r\n    <h6>{text.split(/\\s+/).filter((ele) => {return ele.length !== 0}).length} Words, {text.length} Character</h6>\r\n    <h6>{0.008 * text.split(\" \").filter((ele) => {return ele.length !== 0}).length }</h6>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   BrowserRouter\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n\n  const toggleMode = () => {\n    if(mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#0b2750';\n      showAlert(\"Enable Dark Mode\",\"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Enable Light Mode\",\"success\");\n    }\n  }\n  return (\n    \n<>\n\n<Navbar title=\"TextUtils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode}  />\n<Alert alert={alert}/>\n\n<div className=\"container my-3\">\n\n <TextForm heading=\"Enter the Text to Analyse\" showAlert={showAlert} mode={mode}/>\n</div>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}